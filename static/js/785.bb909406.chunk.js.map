{"version":3,"file":"static/js/785.bb909406.chunk.js","mappings":"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","sources":["components/AuthComponents/AuthContainer/AuthContaier.styled.jsx","components/AuthComponents/AuthContainer/AuthContaier.jsx","components/AuthComponents/Modal/Modal.styled.jsx","components/AuthComponents/FormComponent/FormComponent.styled.jsx","components/AuthComponents/EmailInput/EmailInput.jsx","components/AuthComponents/PasswordInput/PasswordInput.jsx","components/AuthComponents/TextInput/TextInput.jsx","components/AuthComponents/FormComponent/FormComponent.jsx","components/AuthComponents/Modal/Modal.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: end;\n  flex: 1;\n\n  background: linear-gradient(to bottom, #007bff, #0056b3);\n`;\n","import { Container } from './AuthContaier.styled';\nimport Cars from 'images/car-rental.png';\n\nconst AuthContaier = ({ children }) => {\n  return (\n    <Container>\n      {children}\n      <img src={Cars} alt=\"other background cars\" />\n    </Container>\n  );\n};\n\nexport default AuthContaier;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  text-align: center;\n  margin: 0 0 20px;\n\n  font-size: 28px;\n  line-height: 1.6;\n  color: var(--btn-text);\n`;\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  width: 250px;\n  height: 320px;\n  padding: 20px;\n\n  background: transparent;\n  border: 2px solid rgba(225, 255, 255, 0.5);\n  border-radius: 20px;\n  backdrop-filter: blur(20px);\n  box-shadow: 0 0 30px rgba(0, 0, 0, 0.5);\n\n  @media screen and (min-width: 375px) {\n    width: 320px;\n    height: 400px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 370px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    width: 450px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { FaUser } from 'react-icons/fa';\nimport { AiOutlineMail, AiFillLock, AiFillUnlock } from 'react-icons/ai';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  gap: 25px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 30px;\n  padding-right: 32px;\n\n  font-size: 14px;\n  line-height: 1.2;\n  color: var(--btn-text);\n\n  outline: none;\n  border: none;\n  border-bottom: 2px solid blue;\n  background-color: transparent;\n\n  ::placeholder {\n    font-size: 14px;\n    line-height: 1.2;\n    color: var(--btn-text);\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n\n    ::placeholder {\n      font-size: 18px;\n    }\n  }\n`;\n\nexport const UserIcon = styled(FaUser)`\n  position: absolute;\n  bottom: 8px;\n  right: 8px;\n\n  width: 15;\n  height: 15px;\n  color: var(--btn-text);\n`;\n\nexport const EmailIcon = styled(AiOutlineMail)`\n  position: absolute;\n  bottom: 8px;\n  right: 8px;\n\n  width: 15;\n  height: 15px;\n  color: var(--btn-text);\n\n  @media screen and (min-width: 768px) {\n    width: 25;\n    height: 25px;\n  }\n`;\n\nexport const PasswordlIconInvisible = styled(AiFillLock)`\n  position: absolute;\n  bottom: 8px;\n  right: 8px;\n\n  cursor: pointer;\n  width: 15;\n  height: 15px;\n  color: var(--btn-text);\n\n  @media screen and (min-width: 768px) {\n    width: 25;\n    height: 25px;\n  }\n`;\n\nexport const PasswordlIconVisible = styled(AiFillUnlock)`\n  position: absolute;\n  bottom: 8px;\n  right: 8px;\n\n  cursor: pointer;\n  width: 15;\n  height: 15px;\n  color: var(--btn-text);\n\n  @media screen and (min-width: 768px) {\n    width: 25;\n    height: 25px;\n  }\n`;\n\nexport const Button = styled.button`\n  color: var(--btn-text);\n  font-weight: 500;\n  font-size: 22px;\n  line-height: 1.2;\n\n  background: var(--hover);\n  border: none;\n  border-radius: 12px;\n  transition: box-shadow var(--transition);\n\n  cursor: pointer;\n  padding: 12px 12px;\n  margin-top: auto;\n\n  :hover,\n  :focus {\n    color: var(--btn-text);\n    box-shadow: 0 0 10px rgba(0, 0, 255, 0.5);\n  }\n`;\n\nexport const InAuth = styled(Link)`\n  font-size: 14px;\n  line-height: 1.2;\n  color: var(--btn-text);\n`;\n","import { Input, Label, EmailIcon } from '../FormComponent/FormComponent.styled';\n\nconst EmailInput = ({ setEmail }) => {\n  return (\n    <Label>\n      <Input\n        type=\"email\"\n        placeholder=\"Email\"\n        onChange={e => setEmail(e.target.value)}\n        required\n      />\n      <EmailIcon />\n    </Label>\n  );\n};\n\nexport default EmailInput;\n","import { useState } from 'react';\nimport {\n  Input,\n  Label,\n  PasswordlIconInvisible,\n  PasswordlIconVisible,\n} from '../FormComponent/FormComponent.styled';\n\nconst PasswordInput = ({ setPassword }) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  return (\n    <Label>\n      <Input\n        type={showPassword ? 'text' : 'password'}\n        placeholder=\"Password\"\n        onChange={e => setPassword(e.target.value)}\n        minlength=\"4\"\n        maxlength=\"32\"\n        required\n        autocomplete=\"current-password\"\n      />\n      {showPassword ? (\n        <PasswordlIconVisible onClick={() => setShowPassword(prev => !prev)} />\n      ) : (\n        <PasswordlIconInvisible\n          onClick={() => setShowPassword(prev => !prev)}\n        />\n      )}\n    </Label>\n  );\n};\n\nexport default PasswordInput;\n","import { Input, Label, UserIcon } from '../FormComponent/FormComponent.styled';\n\nconst TextInput = ({ setText }) => {\n  return (\n    <Label>\n      <Input\n        type=\"text\"\n        placeholder=\"Name\"\n        onChange={e => setText(e.target.value)}\n      />\n      <UserIcon />\n    </Label>\n  );\n};\n\nexport default TextInput;\n","import { useState } from 'react';\nimport EmailInput from '../EmailInput';\nimport PasswordInput from '../PasswordInput';\nimport TextInput from '../TextInput';\nimport { Button, Form, InAuth } from './FormComponent.styled';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { userLogin, userRegistration } from 'redux/auth/operations';\n\nconst FormComponent = () => {\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (pathname === '/register') {\n      dispatch(userRegistration({ userName, email, password })).then(\n        ({ meta: { rejectedWithValue } }) => {\n          if (rejectedWithValue) console.log('error');\n        }\n      );\n      return;\n    }\n\n    dispatch(userLogin({ email, password })).then(\n      ({ meta: { rejectedWithValue } }) => {\n        if (rejectedWithValue) console.log('error');\n      }\n    );\n\n    e.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      {pathname === '/register' && <TextInput setText={setUserName} />}\n      <EmailInput setEmail={setEmail} />\n      <PasswordInput setPassword={setPassword} />\n      <Button type=\"submit\">Submit</Button>\n      <InAuth to={pathname === '/register' ? '/login' : '/register'}>\n        {pathname !== '/register'\n          ? \"Don't have an account? Sign Up\"\n          : 'Already have an account? Log In'}\n      </InAuth>\n    </Form>\n  );\n};\n\nexport default FormComponent;\n","import { useLocation } from 'react-router-dom';\nimport { Title, Wrapper } from './Modal.styled';\n\nimport FormComponent from '../FormComponent';\n\nconst Modal = () => {\n  const { pathname } = useLocation();\n\n  return (\n    <Wrapper>\n      <Title>{pathname === '/login' ? 'Login' : 'Register'}</Title>\n      <FormComponent />\n    </Wrapper>\n  );\n};\n\nexport default Modal;\n","import Modal from 'components/AuthComponents/Modal';\nimport AuthContaier from 'components/AuthComponents/AuthContainer';\n\nconst LoginPage = () => {\n  return (\n    <AuthContaier>\n      <Modal></Modal>\n    </AuthContaier>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","_ref","children","_jsxs","_jsx","src","Cars","alt","Title","h2","Wrapper","_templateObject2","Form","form","Label","label","Input","input","_templateObject3","UserIcon","FaUser","_templateObject4","EmailIcon","AiOutlineMail","_templateObject5","PasswordlIconInvisible","AiFillLock","_templateObject6","PasswordlIconVisible","AiFillUnlock","_templateObject7","Button","button","_templateObject8","InAuth","Link","_templateObject9","setEmail","type","placeholder","onChange","e","target","value","required","setPassword","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","minlength","maxlength","autocomplete","onClick","prev","setText","dispatch","useDispatch","pathname","useLocation","userName","setUserName","_useState3","_useState4","email","_useState5","_useState6","password","onSubmit","preventDefault","userLogin","then","_ref2","meta","rejectedWithValue","console","log","reset","userRegistration","TextInput","EmailInput","PasswordInput","to","FormComponent","AuthContaier","Modal"],"sourceRoot":""}